{"version":3,"sources":["components/MarkerPin.js","components/InfoContent.js","components/MapBox.js","utils/mapboxConfig.js","Search.js","DataAPI.js","components/Header.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["MarkerPin","props","onClick","className","InfoContent","name","address","venueDetails","city","state","country","console","log","undefined","bestPhoto","width","height","alt","src","prefix","suffix","TOKEN","MAPSTYLE","navStyle","position","top","right","padding","Map","updateViewport","viewport","setState","renderMarker","poi","index","key","longitude","location","lng","latitude","lat","size","event","handleItemClick","id","poiInfo","zoom","bearing","pitch","this","infoWindowId","poiId","tipSize","anchor","closeOnClick","onClose","onToggleOpen","onViewportChange","mapStyle","mapboxApiAccessToken","pois","map","renderPopup","style","Component","Search","updateQuery","query","filterByQuery","canvasClasses","filterHidden","aria-hidden","type","role","aria-label","tabIndex","placeholder","value","onChange","target","filteredPois","onKeyPress","href","api","fetchDetails","fetch","then","results","json","Header","openSearch","e","Footer","App","center","getPoiDetails","DataAPI","data","response","venue","tips","groups","catch","error","window","alert","listItem","trim","clearQuery","match","RegExp","escapeRegExp","filter","test","sort","sortBy","document","getElementsByClassName","classList","toggle","closeSideBar","venues","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3558d937.chunk.js","sourcesContent":["import React from 'react'\n\nconst MarkerPin = (props) => {\n\n    const {onClick} = props;\n    \n    return (\n        <i \n          className=\"icon icon-location text-primary\"\n          onClick={onClick} \n          />\n    );\n}\n\nexport default MarkerPin\n","import React from 'react'\n\nfunction InfoContent(props) {\n        let {name, address, city, state, country, venueDetails} = props\n        console.log('---> print props: ', props)\n    return (\n        venueDetails !== undefined &&\n        <div className=\"container\">\n                    <div className=\"card\">\n            <div className=\"card-header\">\n                <div className=\"card-title h5\">{name}</div>\n                <div className=\"card-subtitle text-gray\">{address}</div>\n            </div>\n            <div className=\"card-body\">\n                ...\n            </div>\n            <div className=\"card-image\">\n                    {(venueDetails !== undefined && venueDetails.bestPhoto) &&\n            <img width={200} height={150} className=\"img-responsive\"\n                alt={'A picture of '+name}\n                src={venueDetails.bestPhoto.prefix+\n                        venueDetails.bestPhoto.width+\n                        'x'+\n                        venueDetails.bestPhoto.height+\n                    venueDetails.bestPhoto.suffix} />\n            }\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default InfoContent\n","import React, {Component} from 'react';\nimport MapGL, {Marker, Popup, NavigationControl} from 'react-map-gl';\nimport MarkerPin from \"./MarkerPin\"\nimport InfoContent from \"./InfoContent\"\nimport {config} from '../utils/mapboxConfig'\n\nconst TOKEN = config.token;\nconst MAPSTYLE = config.styleURL\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  padding: '100px 10px'\n};\n\nexport default class Map extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        latitude: 42.24059889999999,\n        longitude: -8.7207268,\n        zoom: 10,\n        bearing: 0,\n        pitch: 0\n      },\n      poiInfo: null\n    };\n  }\n\n  updateViewport = viewport => {\n    this.setState({viewport});\n  };\n\n  renderMarker = (poi, index) => {\n    return (\n      <Marker\n      key={`marker-${index}`} \n      longitude={poi.location.lng} \n      latitude={poi.location.lat}>\n        <MarkerPin size={20} onClick={(event) => {\n          this.props.handleItemClick(event, poi.id)\n          this.setState({poiInfo: poi})\n        }\n        }/>\n      </Marker>\n    );\n}\n\n  renderPopup() {\n    console.log('---> print poiInfo; ', this.state.poiInfo)\n    console.log('---> infoWindowID: ', this.props.infoWindowId)\n  return (\n    this.props.infoWindowId === this.props.poiId && <Popup\n        tipSize={5}\n        anchor=\"top\"\n        longitude={this.state.poiInfo.location.lng}\n        latitude={this.state.poiInfo.location.lat}\n        closeOnClick={false}\n        onClose={this.props.onToggleOpen}\n      >\n        <InfoContent \n          name={this.state.poiInfo.name}\n          address={this.state.poiInfo.address}\n          city={this.state.poiInfo.city}\n          state={this.state.poiInfo.state}\n          country={this.state.poiInfo.country}\n          venueDetails={this.props.venueDetails}\n        ></InfoContent>\n      </Popup>\n  );\n}\n\nrender() {\n    const {viewport} = this.state;\nreturn (\n      <MapGL\n        {...viewport}\n        onViewportChange={this.updateViewport}\n        width=\"100%\"\n        height=\"637px\"\n        mapStyle={MAPSTYLE}\n        mapboxApiAccessToken={TOKEN}\n        >\n          {this.props.pois.map(this.renderMarker)}\n          {this.renderPopup()}\n        <div className=\"nav\" style={navStyle}>\n          <NavigationControl/>\n        </div>\n      </MapGL>\n    );\n  }\n}","export const config = {\n    styleURL: \"mapbox://styles/triptofante/cjz9z3jc207d81cp7tffdlwve\",\n    token: \"pk.eyJ1IjoidHJpcHRvZmFudGUiLCJhIjoiY2prYTNyZ29nMGk2MTNrbnZ5a3owdmY5ZiJ9.Ru05wwYgJ5AIuYED6QkSwA\"\n}\n","import React, { Component } from 'react';\n\nclass Search extends Component {\n\n  /* With this update method we will update the state.query in App.js\n   * depending on user input\n   */\n  updateQuery = (query) => {\n  this.props.filterByQuery(query)\n  }\n\n  render () {\n    let canvasClasses = this.props.filterHidden ? \n      \"off-canvas-sidebar\": \n      \"off-canvas-sidebar active\"  \n    \n    return (\n      <div id=\"sidebar-id\" className={canvasClasses + \" search-poi nav-custom padding-none\"}\n        aria-hidden={this.props.filterHidden}>\n          <div className=\"app-brand\">\n            <h5 className=\"text-bold text-primary text-uppercase app-title\">Local SightSeeing</h5>\n            <small className=\"label label-secondary text-bold\">MAP</small>\n          </div>\n          <div className=\"form-autocomplete\">\n            <div className=\"form-autocomplete-input form-input\">\n              <input \n                className=\"form-input text-7x\" \n                type=\"text\" \n                role=\"search\"\n                aria-label=\"search\"\n                tabIndex=\"0\"\n                placeholder=\"Start Typing...\"\n                value={this.props.query}\n                onChange={(event) => this.updateQuery(event.target.value)}\n                />\n            </div>\n\n            <ul className=\"menu menu-custom\">\n  {this.props.filteredPois.map(poi => (\n              <li\n              tabIndex=\"0\"\n              onClick={(event) => this.props.handleItemClick(event,{lat: poi.location.lat, lng: poi.location.lng}, poi.id)}\n              onKeyPress={(event) => { event.key === 'Enter' && this.props.handleItemClick(event,{lat: poi.location.lat, lng: poi.location.lng}, poi.id) }}\n              key={poi.id}\n              className=\"menu-item\">\n               <a href=\"\" >\n               <div className=\"tile tile-centered\">\n                <div className=\"tile-icon text-primary\">\n                  <i className=\"icon icon-location\"/>\n\n                </div>\n                <div className=\"tile-content text-7x\">\n                  {poi.name}\n                </div>\n              </div>\n               \n               </a>\n              </li>\n            ))\n          }\n          </ul>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Search\n","/* The functionality here is based on BooksAPI from FEND p7: myReads App */\nconst api= 'https://api.foursquare.com/v2'\n\n// TODO: here we will fetch the POIs (Points of Interest) data using FourSquareAPI\n\n/*The variable below has modificable main parameters that will be passed to FourSquare API url):\n * ll=42.24059889999999,-8.7207268\n * &intent=browse\n * &radius=10000\n * &categoryId=4deefb944765f83613cdba6e\n * &client_id=CGXWEC0GDPSBTIX4M52VH4H2DCQNLK3NR2DG5POGO2IVQRAL\n * &client_secret=YPSYJESZMRZSVIOCNFGIHYH5AH0NWWNXVAPSBR1VICEPP3GT\n *  &v=20180808\n *\n * You can check an explanation of each parameter in FourSquare API docs:\n * https://developer.foursquare.com/docs/api/venues/search\n */\n\nconst requestParameters ='ll=42.24059889999999,-8.7207268&intent=browse&radius=10000&categoryId=4deefb944765f83613cdba6e&client_id=CGXWEC0GDPSBTIX4M52VH4H2DCQNLK3NR2DG5POGO2IVQRAL&client_secret=YPSYJESZMRZSVIOCNFGIHYH5AH0NWWNXVAPSBR1VICEPP3GT&v=20180808'\nconst clientId ='?&client_id=CGXWEC0GDPSBTIX4M52VH4H2DCQNLK3NR2DG5POGO2IVQRAL'\nconst clientSecret ='&client_secret=YPSYJESZMRZSVIOCNFGIHYH5AH0NWWNXVAPSBR1VICEPP3GT&v=20180808'\n//We fetch POIs from FourSquare here\n// TODO: Add .catch() all along to handle errors when retrieving data\nexport const fetchPois = () =>\n  fetch(`${api}/venues/search?${requestParameters}`)\n  .then(results => results.json())\n  .then( data => data.response.venues)\n\n\nexport const fetchDetails = (poiId) =>\n  fetch(`${api}/venues/${poiId}${clientId}${clientSecret}`)\n  .then(results => results.json())\n","import React, {Fragment, Component} from 'react'\n\nexport class Header extends Component {\n\n    render() {\n        return (\n            <Fragment>\n            <header className=\"navbar navbar-custom\">\n                <section className=\"navbar-section\">\n                <button className=\"off-canvas-toggle btn btn-link btn-action ml-2\">\n                    <i \n                        className=\"icon icon-menu\"\n                        tabIndex=\"0\"\n                        onClick={this.props.openSearch}\n                        onKeyPress={(e) => { e.key === 'Enter' && this.openSearch() }}\n                    />\n                </button>\n                </section>\n                <section className=\"navbar-center\">\n                </section>\n                <section className=\"navbar-section\">\n                    <a className=\"btn btn-link mr-2\" href=\"https://github.com/mechaphysis\">GitHub</a>\n                </section>\n            </header>\n        </Fragment>\n        )\n    }\n}\n\nexport default Header\n","import React, {Fragment} from 'react'\n\nfunction Footer() {\n    return (\n        <Fragment>\n            <footer className=\"footer container text-right pt-2\">\n                    <small className=\"footer-details text-gray\">\n                Developed by <a href=\"https://github.com/mechaphysis\">@mechaphysis</a>. \n                Information about the locations is provided by <a href=\"https://developer.foursquare.com/\">FourSquare API</a>.\n            </small>\n            </footer>\n        </Fragment>\n    )\n}\n\nexport default Footer\n","import React, { Component } from 'react';\nimport escapeRegExp from 'escape-string-regexp'\nimport sortBy from 'sort-by'\nimport './App.scss';\nimport MapBox from \"./components/MapBox\"\nimport Search from './Search.js'\nimport * as DataAPI from './DataAPI'\nimport Header from \"./components/Header\"\nimport Footer from './components/Footer';\n\nclass App extends Component {\n/* inside the Parent state we gonna pass the array of POI (POI stands for Point of Interests)\n * retrieved using FourSquare API. We will store also which Marker has been clicked, the center of\n * our map and the zoom level. Passing this objects to the Parent state will make them accesible\n * to both its children (Map and Search) any update on the state will be reflected on both Children.\n * We do it this way to ensure that the UI is rerendered appropiately for both components any time a change\n * is triggered in either of them.\n */\n  state = {\n    pois: [],\n    infoWindowId: null,\n    center: { lat: 42.24059889999999, lng: -8.7207268 },\n    zoom: 13,\n    query : '',\n    filteredPois: [],\n    filterHidden: true,\n    venueDetails: []\n  }\n\n  /* Due to limitations in FourSquare API for Venue Details, we implement\n   * inside handleItemClick method the data fetching for each marker. This way,\n   * the data request to FourSquare API would only be made each time the user\n   * clicks on a marker. Otherwise we would reach the limit of 50 daily requests\n   * very soon.\n  */\n\n  getPoiDetails = (poiId) => {\n    DataAPI.fetchDetails(poiId).then(\n      (data) => {\n        this.setState({venueDetails: data.response.venue})\n        console.log(\"data response: \", data.response.venue, \"tips: \", data.response.venue.tips.groups)})\n        .catch(error => {\n      window.alert(\"Error loading Venue Details from FourSquare API\", error)\n    })\n  }\n\n  handleItemClick = (event,listItem) => {\n    console.log('--item click: ', listItem)\n    this.setState({\n      infoWindowId: listItem,\n      poiId: listItem\n    })\n  this.getPoiDetails(listItem)\n  }\n\n/* We load and fetch asynchronously the list of POIs by\n * wrapping the fetching inside componentDidMount()\n * we load the list of Pois also in filteredPois so this second list contains\n * by default all locations and the map shows up everything when the user first\n * enter the app\n */\n // TODO: KEEP WORKING ON FETCHING VENUE DETAILS FOR EVERY POI\n  componentDidMount() {\n    DataAPI.fetchPois().then( pois => {\n      this.setState({ pois: pois, filteredPois: pois })\n    }).catch(error => {\n      window.alert(\"Error loading Data from FourSquare API: \", error)\n    })\n  }\n\n  /* As stated in: https://tomchentw.github.io/react-google-maps/\n  * We are also going to need a handler method for clicks on Markers:\n  * By passing as center value the lat and lng of the marker the center\n  * of our map will switch to be the location of the clicked Marker\n  * We also increment a bit the value for zoom, so it will zoom in\n  * the marker area\n  */\n\n  /* Logic for query and filtering:\n   * We gonna need a query inside our state for updating\n   * the filtering results:\n   * Most of the logic is reused from previous FEND Project P7\n   * https://github.com/mechaphysis/fend-project-myreads-react-app\n   * which is itself based on reactnd-contacts code along app:\n   * https://github.com/udacity/reactnd-contacts-complete\n   */\n\n  /* With this update method we will update the state.query\n   * depending on user input\n   */\n\n  updateQuery = (query) => {\n    this.setState({ query: query.trim() })\n  }\n\n  /* This small method allows us to reset te query to empty string\n   * which in turn will show again the full list of pois\n   */\n  clearQuery = () => {\n    this.setState({ query: '' })\n  }\n\n  filterByQuery = (query) => {\n    this.setState({query: query.trim() })\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), 'i')\n      this.setState({filteredPois: this.state.pois.filter((poi) => match.test((poi.name))) })\n    } else {\n      this.setState({filteredPois : this.state.pois})\n    }\n    //We order by name the list of POIs:\n    this.state.filteredPois.sort(sortBy('name'))\n  }\n\n      /* The function below will toggle the open class for showing/hiding the\n    * list of places and filter functionality by clicking hamburguer menu\n    * It will also change the aria-hidden value for true or false\n    * by changing filterHidden\n    */\n    openSearch = () => {\n      let searchMenu = document.getElementsByClassName('search-poi')\n      searchMenu[0].classList.toggle('active')\n      if (this.state.filterHidden === true) {\n      this.setState({filterHidden: false})\n      } else {\n      this.setState({filterHidden: true})\n      }\n    }\n\n    closeSideBar = () => this.setState({filterHidden: true})\n    onToggleOpen = () => this.setState({infoWindowId: null})\n  render() {\n    return (\n      <div className=\"App\">\n        <Header openSearch={this.openSearch}></Header>\n        <main className=\"off-canvas canvas-sidebar-show\">\n            <Search\n              pois={this.state.pois}\n              filteredPois={this.state.filteredPois}\n              query={this.state.query}\n              filterByQuery={this.filterByQuery}\n              clearQuery={this.clearQuery}\n              handleItemClick={this.handleItemClick}\n              filterHidden={this.state.filterHidden}\n            />\n            <div className=\"off-canvas-overlay\" onClick={this.closeSideBar}></div>\n            <div className=\"off-canvas-content\">\n              <MapBox\n              pois={ this.state.filteredPois } \n              handleItemClick={this.handleItemClick}\n              poiId={this.state.poiId}\n              infoWindowId={this.state.infoWindowId}\n              venueDetails={this.state.venueDetails}\n              onToggleOpen={this.onToggleOpen}\n            />\n            <Footer></Footer>\n            </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}